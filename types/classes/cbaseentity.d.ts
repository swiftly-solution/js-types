interface CBaseEntity {
    readonly "CBodyComponent": CBodyComponent;
    readonly "NetworkTransmitComponent": CNetworkTransmitComponent;
    readonly "ThinkFunctions": Object;
    "CurrentThinkContext": number;
    "LastThinkTick": number;
    "DisabledContextThinks": boolean;
    "IsSteadyState": any;
    "LastNetworkChange": number;
    readonly "ResponseContexts": Object;
    "ResponseContext": string;
    "Health": number;
    "MaxHealth": number;
    "LifeState": number;
    "DamageAccumulator": number;
    "TakesDamage": boolean;
    "TakeDamageFlags": number;
    "PlatformType": number;
    "MoveCollide": number;
    "MoveType": number;
    "ActualMoveType": number;
    "WaterTouch": number;
    "SlimeTouch": number;
    "RestoreInHierarchy": boolean;
    "Target": string;
    readonly "DamageFilter": CBaseFilter;
    "DamageFilterName": string;
    "MoveDoneTime": number;
    "SubclassID": number;
    "AnimTime": number;
    "SimulationTime": number;
    "CreateTime": number;
    "ClientSideRagdoll": boolean;
    "InterpolationFrame": number;
    "PrevVPhysicsUpdatePos": Vector;
    "TeamNum": number;
    "Globalname": string;
    "SentToClients": number;
    "Speed": number;
    "UniqueHammerID": string;
    "Spawnflags": number;
    "NextThinkTick": number;
    "SimulationTick": number;
    readonly "OnKilled": CEntityIOOutput;
    "Flags": number;
    "AbsVelocity": Vector;
    readonly "Velocity": CNetworkVelocityVector;
    "BaseVelocity": Vector;
    "PushEnumCount": number;
    readonly "Collision": CCollisionProperty;
    readonly "EffectEntity": CBaseEntity;
    readonly "OwnerEntity": CBaseEntity;
    "Effects": number;
    readonly "GroundEntity": CBaseEntity;
    "GroundBodyIndex": number;
    "Friction": number;
    "Elasticity": number;
    "GravityScale": number;
    "TimeScale": number;
    "WaterLevel": number;
    "AnimatedEveryTick": boolean;
    "DisableLowViolence": boolean;
    "WaterType": number;
    "EFlags": number;
    readonly "OnUser1": CEntityIOOutput;
    readonly "OnUser2": CEntityIOOutput;
    readonly "OnUser3": CEntityIOOutput;
    readonly "OnUser4": CEntityIOOutput;
    "InitialTeamNum": number;
    "NavIgnoreUntilTime": number;
    "AngVelocity": QAngle;
    "NetworkQuantizeOriginAndAngles": boolean;
    "LagCompensate": boolean;
    "OverriddenFriction": number;
    readonly "Blocker": CBaseEntity;
    "LocalTime": number;
    "VPhysicsUpdateLocalTime": number;
    "BloodType": number;
    readonly "Parent": CEntityInstance;
    EmitSound: (sound_name: string,pitch: number,volume: number) => null|undefined;
    CollisionRulesChanged: () => null|undefined;
    EHandle: () => CBaseEntity;
    Spawn: (keyvals: CEntityKeyValues|null) => null|undefined;
    Despawn: () => null|undefined;
    AcceptInput: (input: string,activator: CEntityInstance,caller: CEntityInstance,value: string,outputID: number) => null|undefined;
    GetClassname: () => string;
    GetVData: () => CEntitySubclassVDataBase;
    Teleport: (value: Vector,angle: QAngle) => null|undefined;
    ToPtr: () => string;
    IsValid: () => boolean;
}

declare function CBaseEntity(ptr_or_class: string|AnySDKClass): CBaseEntity;