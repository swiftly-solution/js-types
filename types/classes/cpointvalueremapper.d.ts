interface CPointValueRemapper {
    "Disabled": boolean;
    "UpdateOnClient": boolean;
    "InputType": number;
    "RemapLineStartName": string;
    "RemapLineEndName": string;
    readonly "RemapLineStart": CBaseEntity;
    readonly "RemapLineEnd": CBaseEntity;
    "MaximumChangePerSecond": number;
    "DisengageDistance": number;
    "EngageDistance": number;
    "RequiresUseKey": boolean;
    "OutputType": number;
    "OutputEntityName": string;
    "OutputEntity2Name": string;
    "OutputEntity3Name": string;
    "OutputEntity4Name": string;
    "HapticsType": number;
    "MomentumType": number;
    "MomentumModifier": number;
    "SnapValue": number;
    "CurrentMomentum": number;
    "RatchetType": number;
    "RatchetOffset": number;
    "InputOffset": number;
    "Engaged": boolean;
    "FirstUpdate": boolean;
    "PreviousValue": number;
    "PreviousUpdateTickTime": number;
    "PreviousTestPoint": Vector;
    readonly "UsingPlayer": CBasePlayerPawn;
    "CustomOutputValue": number;
    "SoundEngage": string;
    "SoundDisengage": string;
    "SoundReachedValueZero": string;
    "SoundReachedValueOne": string;
    "SoundMovingLoop": string;
    readonly "OnReachedValueZero": CEntityIOOutput;
    readonly "OnReachedValueOne": CEntityIOOutput;
    readonly "OnReachedValueCustom": CEntityIOOutput;
    readonly "OnEngage": CEntityIOOutput;
    readonly "OnDisengage": CEntityIOOutput;
    readonly "Parent": CBaseEntity;
    ToPtr: () => string;
    IsValid: () => boolean;
}

declare function CPointValueRemapper(ptr_or_class: string|AnySDKClass): CPointValueRemapper;