interface CCSPlayer_MovementServices {
    "LadderNormal": Vector;
    "LadderSurfacePropIndex": number;
    "DuckAmount": number;
    "DuckSpeed": number;
    "DuckOverride": boolean;
    "DesiresDuck": boolean;
    "DuckOffset": number;
    "DuckTimeMsecs": number;
    "DuckJumpTimeMsecs": number;
    "JumpTimeMsecs": number;
    "LastDuckTime": number;
    "LastPositionAtFullCrouchSpeed": Vector2D;
    "DuckUntilOnGround": boolean;
    "HasWalkMovedSinceLastJump": boolean;
    "InStuckTest": boolean;
    "TraceCount": number;
    "StuckLast": number;
    "SpeedCropped": boolean;
    "GroundMoveEfficiency": number;
    "OldWaterLevel": number;
    "WaterEntryTime": number;
    "Forward": Vector;
    "Left": Vector;
    "Up": Vector;
    "GameCodeHasMovedPlayerAfterCommand": number;
    "MadeFootstepNoise": boolean;
    "Footsteps": number;
    "OldJumpPressed": boolean;
    "JumpPressedTime": number;
    "StashGrenadeParameterWhen": number;
    "ButtonDownMaskPrev": number;
    "OffsetTickCompleteTime": number;
    "OffsetTickStashedSpeed": number;
    "Stamina": number;
    "HeightAtJumpStart": number;
    "MaxJumpHeightThisJump": number;
    "MaxJumpHeightLastJump": number;
    "StaminaAtJumpStart": number;
    "AccumulatedJumpError": number;
    readonly "Parent": CPlayer_MovementServices_Humanoid;
    ToPtr: () => string;
    IsValid: () => boolean;
}

declare function CCSPlayer_MovementServices(ptr_or_class: string|AnySDKClass): CCSPlayer_MovementServices;