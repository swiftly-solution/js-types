interface UserMessage {

    IsValidMessage: () => boolean;
    GetMessageName: () => string;
    GetMessageID: () => number;
    HasField: (fieldName: string) => boolean;
    GetInt32: (fieldName: string) => number;
    SetInt32: (fieldName: string,value: number) => null|undefined;
    GetRepeatedInt32: (fieldName: string,index: number) => number;
    SetRepeatedInt32: (fieldName: string,index: number,value: number) => null|undefined;
    AddInt32: (fieldName: string,index: number) => null|undefined;
    GetInt64: (fieldName: string) => number;
    SetInt64: (fieldName: string,value: number) => null|undefined;
    GetRepeatedInt64: (fieldName: string,index: number) => number;
    SetRepeatedInt64: (fieldName: string,index: number,value: number) => null|undefined;
    AddInt64: (fieldName: string,value: number) => null|undefined;
    GetUInt32: (fieldName: string) => number;
    SetUInt32: (fieldName: string,value: number) => null|undefined;
    GetRepeatedUInt32: (fieldName: string,index: number) => number;
    SetRepeatedUInt32: (fieldName: string,index: number,value: number) => null|undefined;
    AddUInt32: (fieldName: string,value: number) => number;
    GetUInt64: (fieldName: string) => number;
    SetUInt64: (fieldName: string,value: number) => null|undefined;
    GetRepeatedUInt64: (fieldName: string,index: number) => number;
    SetRepeatedUInt64: (fieldName: string,index: number,value: number) => null|undefined;
    AddUInt64: (fieldName: string,value: number) => null|undefined;
    GetInt64OrUnsigned: (fieldName: string) => number;
    SetInt64OrUnsigned: (fieldName: string,value: number) => null|undefined;
    GetRepeatedInt64OrUnsigned: (fieldName: string,index: number) => number;
    SetRepeatedInt64OrUnsigned: (fieldName: string,index: number,value: number) => null|undefined;
    AddInt64OrUnsigned: (fieldName: string,value: number) => number;
    GetBool: (fieldName: string) => boolean;
    SetBool: (fieldName: string,value: boolean) => null|undefined;
    GetRepeatedBool: (fieldName: string,index: number) => boolean;
    SetRepeatedBool: (fieldName: string,index: number,value: boolean) => null|undefined;
    AddBool: (fieldName: string,value: boolean) => null|undefined;
    GetFloat: (fieldName: string) => number;
    SetFloat: (fieldName: string,value: number) => null|undefined;
    GetRepeatedFloat: (fieldName: string,index: number) => number;
    SetRepeatedFloat: (fieldName: string,index: number,value: number) => null|undefined;
    AddFloat: (fieldName: string,value: number) => null|undefined;
    GetDouble: (fieldName: string) => number;
    SetDouble: (fieldName: string,value: number) => null|undefined;
    GetRepeatedDouble: (fieldName: string,index: number) => number;
    SetRepeatedDouble: (fieldName: string,index: number,value: number) => null|undefined;
    AddDouble: (fieldName: string) => number;
    GetFloatOrDouble: (fieldName: string) => number;
    SetFloatOrDouble: (fieldName: string,value: number) => null|undefined;
    GetRepeatedFloatOrDouble: (fieldName: string,index: number) => number;
    SetRepeatedFloatOrDouble: (fieldName: string,index: number,value: number) => null|undefined;
    AddFloatOrDouble: (fieldName: string,value: number) => number;
    GetString: (fieldName: string) => string;
    SetString: (fieldName: string,value: string) => null|undefined;
    GetRepeatedString: (fieldName: string,index: number) => string;
    SetRepeatedString: (fieldName: string,index: number,value: string) => null|undefined;
    AddString: (fieldName: string,value: string) => null|undefined;
    GetColor: (fieldName: string) => Color;
    SetColor: (fieldName: string,value: Color) => null|undefined;
    GetRepeatedColor: (fieldName: string,index: number) => Color;
    SetRepeatedColor: (fieldName: string,index: number,value: Color) => null|undefined;
    AddColor: (fieldName: string,value: Color) => null|undefined;
    GetVector2D: (fieldName: string) => Vector2D;
    SetVector2D: (fieldName: string,value: Vector2D) => null|undefined;
    GetRepeatedVector2D: (fieldName: string,index: number) => Vector2D;
    SetRepeatedVector2D: (fieldName: string,index: number,value: Vector2D) => null|undefined;
    AddVector2D: (fieldName: string,value: Vector2D) => null|undefined;
    GetVector: (fieldName: string) => Vector;
    SetVector: (fieldName: string,value: Vector) => null|undefined;
    GetRepeatedVector: (fieldName: string,index: number) => Vector;
    SetRepeatedVector: (fieldName: string,index: number,value: Vector) => null|undefined;
    AddVector: (fieldName: string,value: Vector) => null|undefined;
    GetQAngle: (fieldName: string) => QAngle;
    SetQAngle: (fieldName: string,value: QAngle) => number;
    GetRepeatedQAngle: (fieldName: string,index: number) => QAngle;
    SetRepeatedQAngle: (fieldName: string,index: number,value: QAngle) => null|undefined;
    AddQAngle: (fieldName: string,value: QAngle) => null|undefined;
    RemoveRepeatedFieldValue: (fieldName: string,index: number) => null|undefined;
    GetRepeatedFieldCount: (fieldName: string) => number;
    GetMessage: (fieldName: string) => UserMessage;
    GetRepeatedMessage: (fieldName: string,index: number) => UserMessage;
    AddMessage: (fieldName: string) => UserMessage;
    SendToPlayer: (playerid: number) => null|undefined;
    SendToAllPlayers: () => null|undefined;
    AddClient: (playerid: number) => null|undefined;
    RemoveClient: (playerid: number) => null|undefined;
    ClearClients: () => null|undefined;
    AddClients: () => null|undefined;
    GetClients: () => Object;
}

declare function UserMessage(partial_message_name: string): UserMessage;